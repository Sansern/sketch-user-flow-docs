// Populate User Flows (command control p)

var numberOfScreensPerPage = getScreensPerPageFromTemplate()
getExportsFolder()

// TODO: Ask user to select exports folder
function getExportsFolder() {
	print('getExportsFolder')
    var openPanel = NSOpenPanel.openPanel( )
    openPanel.setCanChooseDirectories(true)
    openPanel.setCanChooseFiles(false)
    openPanel.setCanCreateDirectories(false)

	openPanel.setTitle("Choose your exports folder")
    openPanel.setPrompt("Choose")
    if (openPanel.runModal() == NSOKButton) {
        var path = openPanel.URL()
        var fileManager = NSFileManager.defaultManager()

    	// Get descriptions from descriptions.json
    	var pathToDescriptionsJson = path.URLByAppendingPathComponent('descriptions.json')
		var descriptions = [NSString stringWithContentsOfURL:pathToDescriptionsJson encoding:NSUTF8StringEncoding error:null]

		print(numberOfScreensPerPage)
		populateScreens(path, fileManager)
    }


}

// TODO: Get screens per page from Template > Screens group
function getScreensPerPageFromTemplate() {
	var pages = doc.pages()
	var layerLoop = pages.objectEnumerator()
    var template

    while (childLayer = layerLoop.nextObject()) {
        if( childLayer.name() == 'Template') {
            template = childLayer
        }
    }

    // Get first (and only) artboard
    var artboard = (template.artboards()).firstObject()

    // Get the 'Screens' group
    var screens = getChildLayerByName(artboard, 'Screens')

    // Get number of children in Screens group
    var numberOfScreensPerPage = screens.layers().length()
    return numberOfScreensPerPage
}


// TODO: Populate screens
function populateScreens(path, fileManager) {
    var contents = fileManager.shallowSubpathsOfDirectoryAtURL(path)
	print(contents)
	// TODO:
	// For each folder
	// 	Get screen
	//	Find first available slot
	//	Create new page (if necessary)
	//	Populate

}


// TODO: Show save dialog
function saveDocument() {

}


// Make sure only one layer is selected
// if ([selection count] == 1) {
//     var layer = selection[0];
//     if ([layer class] == [MSBitmapLayer class]) {
//         // Choose the file to link
//         var openPanel = [NSOpenPanel openPanel]
//         [openPanel setCanChooseDirectories:false]
//         [openPanel setCanChooseFiles:true]
//         [openPanel setCanCreateDirectories:false]

//         [openPanel setTitle:@"Choose an image"]
//         [openPanel setPrompt:@"Choose"]
//         if ([openPanel runModal] == NSOKButton)
//         {
//             var path = [openPanel URL]
//             var data = [[NSFileManager defaultManager] contentsAtPath:path]
//             var img = [[NSImage alloc] initWithData:data]
//             var imageCollection = [[layer documentData] images]
//             var layerName = [layer name]

//             // Update layer with linked image
//             var imageData = [imageCollection addImage:img convertColourspace:false]
//             layer.image = imageData

//             // Get folder and filename
//             path = [path URLByDeletingPathExtension]
//             var reversedPathComponents = [[[path pathComponents] reverseObjectEnumerator] allObjects];
//             var folder = [reversedPathComponents objectAtIndex:1]
//             var filename = [reversedPathComponents objectAtIndex:0]

//             // Get filename components
//             var screenNumber = [filename componentsSeparatedByString:" "][0]
//             var screenName = [filename substringFromIndex:screenNumber.length()+1]

//             // Update layer name with filename
//             layer.name = filename

//             // Update group name
//             var parent = [layer parentGroup]
//             parent.name = screenNumber

//             // Update screen number
//             setTextOnChildLayerByName( parent, "Screen", screenNumber )

//             // Update heading text
//             setTextOnChildLayerByName( parent, "Heading", screenName )

//             // Update page title
//             // TODO: This should only be done once, really...
//             var artboard = [[[doc currentPage] artboards] firstObject]
//             setTextOnChildLayerByName( artboard, "Section", folder )
//         }
//     }
//     else {
//         // Display a message
//         [doc showMessage:"You must select an image to replace"]
//     }
// }
// else {
//     // Display a message
//     [doc showMessage:"You must select an image to replace"]
// }

function setTextOnChildLayerByName( group, name, text ) {
    var layer = getChildLayerByName( group, name )
    if ( layer ) {
        layer.setStringValue( text )
        [layer adjustFrameToFit]
    }
}

function getChildLayerByName( group, name ) {
    var layers = group.layers()
    var layerLoop = [[layers array] objectEnumerator]

    while (childLayer = [layerLoop nextObject]) {
        if( [childLayer name] == name) {
            return childLayer;
        }
    }

    doc.showMessage( "No layer called " + name + " found" );
    return false;
}
